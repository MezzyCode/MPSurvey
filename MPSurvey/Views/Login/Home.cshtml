@model Model.JsonModels.Master.JsonUser

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}

<style>
    .row-chart {
        display: flex;
    }

    .col-chart {
        flex: 1;
    }

    .refresh-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
    }
</style>

<button id="btnRefreshChart" class="refresh-button btn btn-primary btn-sm m-3" type="button" style="max-width: 500px;">
    Refresh Chart
</button>

</section>
<section class="card card-info p-3">
    <h2 class="text-center">Welcome to Masinton Pasaribu Survey Dashboard</h2>
</section>


    <section class="content">
        <div class="container-fluid">
            <!-- new vendor form -->
            <div class="row center">
                <div class="col-md-12">
                    <div class="card card-info">

                        <div class="row left mt-3 ms-4 align-items-center">
                            <label class="control-label">Kelurahan</label>
                            <div class="col-md-3">
                                @Html.DropDownList("Select Kelurahan", new SelectList(ViewBag.listKelurahan, "Name", "Name"),"Semua", new { @id="filterKelurahan", @class="form-control" })
                            </div>
                            <div class="col-md-1">
                                <button id="btnRefreshChart" class="btn btn-sm btn-secondary">Refresh</button>
                            </div>
                        </div>

                        <div class="card-body">
                            <canvas id="mainChart" style="width:100%;"></canvas>
                        </div>

                    </div>
                </div>
            </div>
            <!-- new vendor form -->

        </div><!-- /.container-fluid -->
    </section>


<section class="content">
    <div class="container-fluid">
        <!-- new vendor form -->
        <div class="row center">
            <div class="col-md-6">
                <div class="card card-info">
                    <div class="card-body text-center">
                        <b>Apakah Ibu/Bapak tahu (pernah dengar, baca, lihat) Masinton Pasribu sebagai Anggota DPR
                            DKI II (Jaksel, Jakpus, dan Luar Negeri)?</b>
                        <canvas id="c3AChart" style="width:100%;"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card card-info">
                    <div class="card-body text-center">
                        <b>Apakah Ibu/Bapak tahu (pernah dengar, baca, lihat) Masinton Pasribu sebagai Aktivis
                            gerakan tahun 1998?</b>
                        <canvas id="c3BChart" style="width:100%;"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <!-- new vendor form -->

    </div><!-- /.container-fluid -->
</section>


<section class="content">
    <div class="container-fluid">
        <!-- new vendor form -->
        <div class="row center">
            <div class="col-md-6">
                <div class="card card-info">
                    <div class="card-body text-center">
                        <b>Apakah Ibu/Bapak tahu bahwa Masinton Pasribu diinginkan kembali oleh masyarakat untuk
                            menjadi anggota DPR RI Dapil DKI II (Kota Jakarta Selatan, Jakarta Pusat, dan Luar
                            Negeri)?</b>
                        <canvas id="c4Chart" style="width:100%;"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card card-info">
                    <div class="card-body text-center">
                        <b>Bersediakah Ibu/Bapak mengkampanyekan Masinton Pasaribu sebagai Calon Wakil Rakyat 2024
                            nanti?</b>
                        <canvas id="c7Chart" style="width:100%;"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <!-- new vendor form -->

    </div><!-- /.container-fluid -->
</section>


    <section class="content">
        <div class="container-fluid">
            <!-- new vendor form -->
            <div class="row center">

                <div class="col-md-6">
                    <div class="card card-info">
                        <div class="card-body text-center">
                            <b>Usia Responden</b>
                            <canvas id="ageChart" style="width:100%;"></canvas>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card card-info">
                        <div class="card-body text-center">
                            <b>Agama Responden</b>
                            <canvas id="religionChart" style="width:100%;"></canvas>
                        </div>
                    </div>
                </div>

            </div>
            <!-- new vendor form -->

        </div><!-- /.container-fluid -->
    </section>


    <section class="content">
        <div class="container-fluid">
            <!-- new vendor form -->
            <div class="row center">

                <div class="col-md-6">
                    <div class="card card-info">
                        <div class="card-body text-center">
                            <b>Pendidikan Responden</b>
                            <canvas id="academicChart" style="width:100%;"></canvas>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card card-info">
                        <div class="card-body text-center">
                            <b>Suku Responden</b>
                            <canvas id="tribeChart" style="width:100%;"></canvas>
                        </div>
                    </div>
                </div>

            </div>
            <!-- new vendor form -->

    </div><!-- /.container-fluid -->
</section>
@*
<section class="container row">
<article class="col-sm-6 card">
<canvas id="religionChart"></canvas>
</article>
<article class="col-sm-6 card">
<h3>Total orang yang mengetahui Masinton Pasaribu S.H.</h3>
<div>
<ul>
<li>Yes: <span id="c1YesCount"/></li>
<li>No: <span id="c1NoCount"/></li>
</ul>
</div>
</article>
</section>*@



@section myScripts {
    <script src="~/plugins/jquery/jquery.min.js"></script>
    <script>

        $(document).ready(function () {

            $("form").submit(function () {

                ShowLoading();

            });


            const colorPalette1 = [
                'rgba(0, 0, 255, 0.5)',
                'rgba(255, 0, 0, 0.5)',
                'rgba(0, 128, 0, 0.5)',
                'rgba(128, 128, 0, 0.5)',
                'rgba(0, 0, 128, 0.5)',
                'rgba(128, 0, 128, 0.5)',
                'rgba(0, 128, 128, 0.5)',
                'rgba(255, 0, 255, 0.5)',
                'rgba(128, 128, 128, 0.5)',
                'rgba(192, 192, 192, 0.5)',
                'rgba(255, 255, 0, 0.5)',
                'rgba(0, 255, 255, 0.5)',
                'rgba(255, 128, 0, 0.5)',
                'rgba(0, 255, 128, 0.5)',
                'rgba(128, 0, 255, 0.5)',
                'rgba(255, 128, 128, 0.5)',
                'rgba(128, 255, 128, 0.5)',
                'rgba(128, 128, 255, 0.5)',
                'rgba(192, 0, 0, 0.5)',
                'rgba(0, 192, 0, 0.5)',
                'rgba(192, 192, 0, 0.5)',
                'rgba(0, 0, 192, 0.5)',
                'rgba(192, 0, 192, 0.5)',
                'rgba(0, 192, 192, 0.5)',
                'rgba(192, 192, 192, 0.5)',
                'rgba(64, 0, 0, 0.5)',
                'rgba(0, 64, 0, 0.5)',
                'rgba(64, 64, 0, 0.5)',
                'rgba(0, 0, 64, 0.5)',
                'rgba(64, 0, 64, 0.5)',
                'rgba(0, 64, 64, 0.5)',
                'rgba(64, 64, 64, 0.5)',
                'rgba(128, 0, 64, 0.5)',
                'rgba(0, 128, 64, 0.5)',
                'rgba(128, 128, 64, 0.5)',
                'rgba(0, 0, 64, 0.5)',
                'rgba(128, 0, 128, 0.5)',
                'rgba(0, 128, 128, 0.5)',
                'rgba(192, 0, 64, 0.5)',
                'rgba(64, 128, 0, 0.5)',
                'rgba(192, 192, 64, 0.5)',
                'rgba(64, 0, 128, 0.5)',
                'rgba(192, 0, 192, 0.5)',
                'rgba(64, 192, 192, 0.5)',
                'rgba(192, 192, 192, 0.5)',
                'rgba(64, 64, 192, 0.5)',
                'rgba(192, 64, 64, 0.5)',
                'rgba(64, 192, 64, 0.5)'
            ];

            async function showChart() {
                var xValues = [];
                var yValues = [];

                var data = await $.ajax({
                    url: "/Master/Answer/MainChart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });

                $.each(data, function (index, item) {
                    xValues.push(item.label);
                    yValues.push(item.count);
                });

                createMainChart(xValues, yValues);
            }

            //function showReligionChart() {
            //    var labels = [];
            //    var datasets = [];

            //    $.ajax({
            //        url: "/Master/Answer/ReligionChart",
            //        method: "POST",
            //        data: {},
            //        async: false,
            //        success: function (data) {
            //            $.each(data, function (index, item) {

            //                var tempdataset = {
            //                    data: [],
            //                    label: item.xLabel, // contain calon name
            //                    backgroundColor: colorPalette1[index],
            //                }

            //                $.each(item.charts, function (index, item) {
            //                    // check whether the labels array already contain the religion
            //                    if (!labels.includes(item.label)) {
            //                        labels.push(item.label);
            //                    }
            //                    tempdataset.data.push(item.count); // contain each agama vote for current calon
            //                });

            //                datasets.push(tempdataset);
            //            });
            //        }
            //    });

            //    createReligionChart(labels, datasets);
            //}

            async function showC3AChart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/C3AChart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });

                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "c3AChart");
            }

            async function showC3BChart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/C3BChart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });

                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "c3BChart");
            }

            async function showC4Chart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/C4Chart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });


                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "c4Chart");
            }

            async function showC7Chart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/C7Chart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });


                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "c7Chart");
            }

            async function showAgeChart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/AgeChart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });

                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "ageChart");
            }

            async function showReligionChart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/ReligionChart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });

                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "religionChart");
            }

            async function showAcademicChart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/AcademicChart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });

                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "academicChart");
            }

            async function showTribeChart() {
                var datasets = [];

                var data = await $.ajax({
                    url: "/Master/Answer/TribeChart",
                    method: "POST",
                    data: {
                        Kelurahan: $('#filterKelurahan').val()
                    }
                });

                $.each(data, function (index, item) {

                    var tempdataset = {
                        data: [item.count],
                        label: item.label, // contain calon name
                        backgroundColor: colorPalette1[index],
                    }

                    datasets.push(tempdataset);
                });

                createCChart(datasets, "tribeChart");
            }

            //function createReligionChart(labels, datasets) {

            //    const existingChart = Chart.getChart("religionChart"); // Get the previous Chart instance
            //    if (existingChart) {
            //        existingChart.destroy(); // Destroy the previous Chart
            //    }

            //    const religionChart = new Chart("religionChart", {
            //        type: "bar",
            //        data: {
            //            labels: labels,
            //            datasets: datasets,
            //        },
            //        options: {
            //            // Chart options
            //            responsive: true,
            //            maintainAspectRatio: true,
            //            //plugins: {
            //            //    legend: {
            //            //        display: false,
            //            //    },
            //            //},
            //            //scales: {
            //            //    y: {
            //            //        suggestedMax: (Math.max(...yValues) * 1.5),
            //            //    }
            //            //}
            //        }
            //    });
            //}

            function createMainChart(xValues, yValues) {

                const existingChart = Chart.getChart("mainChart"); // Get the previous Chart instance
                if (existingChart) {
                    existingChart.destroy(); // Destroy the previous Chart
                }

                const datasets = xValues.map((label, index) => ({
                    label: label,
                    data: [yValues[index]],
                    backgroundColor: colorPalette1[index],
                }));

                const myChart = new Chart("mainChart", {
                    type: "bar",
                    data: {
                        labels: [""],
                        datasets: datasets,
                    },
                    options: {
                        // Chart options
                        responsive: true,
                        maintainAspectRatio: true,
                        height: "auto",
                        scales: {
                            x: {
                                display: false,
                            },
                            y: {
                                suggestedMax: (Math.max(...yValues) * 1.25),
                            }
                        }
                    },
                });
            }

            function showC1Count() {
                $.ajax({
                    url: "/Master/Answer/C1Count",
                    method: "POST",
                    data: {},
                    async: false,
                    success: function (data) {
                        $.each(data, function (index, item) {
                            if (item.label == "YA") {
                                $("#c1YesCount").text(item.count);
                            }
                            else {
                                $("#c1NoCount").text(item.count);
                            }
                        });
                    }
                });
            }

            function createCChart(datasets, chartId) {

                const existingChart = Chart.getChart(chartId); // Get the previous Chart instance
                if (existingChart) {
                    existingChart.destroy(); // Destroy the previous Chart
                }

                const maxDataValue = datasets.reduce((max, obj) => {
                    const maxInDataArray = Math.max(...obj.data);
                    return Math.max(max, maxInDataArray);
                }, -Infinity);

                const myChart = new Chart(chartId, {
                    type: "bar",
                    data: {
                        labels: [""],
                        datasets: datasets,
                    },
                    options: {
                        // Chart options
                        responsive: true,
                        maintainAspectRatio: true,
                        height: "auto",
                        scales: {
                            x: {
                                display: false,
                            },
                            y: {
                                suggestedMax: maxDataValue * 1.25,
                            }
                        }
                    }
                });
            }

            async function repeatFetch() {
                showChart();
                showC3AChart();
                showC3BChart();
                showC4Chart();
                showC7Chart();
                showC1Count();
                showAgeChart();
                showReligionChart();
                showAcademicChart();
                showTribeChart();

                setTimeout(function () {
                    repeatFetch();
                }, 60000);
            }

            (async () => {
                await repeatFetch();
            })();

            $("#btnRefreshChart").on("click", async function () {
                showChart();
                showC3AChart();
                showC3BChart();
                showC4Chart();
                showC7Chart();
                showC1Count();
                showAgeChart();
                showReligionChart();
                showAcademicChart();
                showTribeChart();
            })

            //function setTargetHeight() {
            //    $("#c1CountWrapper").height($("#religionChartWrapper").height());
            //}

            //$(window).on("resize", setTargetHeight());

            //setTargetHeight();

        @if (TempData["notification"] != null)
        {
            @Html.Raw(TempData["notification"])
        }

                                                                            });

    </script>

}